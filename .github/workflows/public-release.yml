name: Sync Release Information

on:
  workflow_dispatch:
    inputs:
      source_repo:
        description: 'Source repository (owner/repo)'
        required: true
        type: string
      release_tag:
        description: 'Tag name of the release to sync'
        required: true
        type: string

jobs:
  fetch-release-info:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch release information from source repository
        id: fetch_release
        env:
          SOURCE_REPO: ${{ inputs.source_repo }}
          RELEASE_TAG: ${{ inputs.release_tag }}
          GITHUB_TOKEN: ${{ secrets.DEVOPS_GITHUB_TOKEN }}
        run: |
          response=$(curl -s -H "Accept: application/vnd.github.v3+json" \
                          -H "Authorization: Bearer ${GITHUB_TOKEN}" \
                          -H "X-GitHub-Api-Version: 2022-11-28" \
                          "https://api.github.com/repos/${SOURCE_REPO}/releases/tags/${RELEASE_TAG}")
          
          # Extract release information
          body=$(echo "$response" | jq -r '.body')

          echo "${body}" >> body.md

          # Extract assets URLs
          assets_urls=$(echo "$response" | jq -r '.assets[].browser_download_url')
          echo "$assets_urls" > assets_urls.txt

      - name: Download release assets
        run: |
          mkdir -p assets
          while IFS= read -r url; do
            curl -L -o assets/$(basename "$url") "$url"
          done < assets_urls.txt

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: body.md
          prerelease: true
          files: ./assets/*.gz
          tag_name: ${{ inputs.release_tag }}
          # make_latest: true


      # - name: Create release in current repository
      #   id: create_release
      #   uses: actions/create-release@v1
      #   with:
      #     tag_name: ${{ inputs.release_tag }}
      #     release_name: ${{ inputs.release_tag }}
      #     body: ${{ steps.fetch_release.outputs.body }}
      #     draft: false
      #     prerelease: true

      # - name: Upload assets to the release
      #   uses: svenstaro/upload-release-action@v2
      #   with:
      #     repo_token: ${{ secrets.DEVOPS_GITHUB_TOKEN }}
      #     file: ./assets/*.gz
      #     tag: ${{ inputs.release_tag }}
      #     overwrite: true
      #     file_glob: true
